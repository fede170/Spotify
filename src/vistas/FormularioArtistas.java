//Esta clase se encargaba solamente de gestionar a los artistas

package vistas;

import modelo.*;

public class FormularioArtistas extends javax.swing.JInternalFrame {

    private Spotify s = null;
    
    public FormularioArtistas(Spotify s) {
        this.s = s;
        initComponents();
        this.lstArtistas.setListData(this.s.getArtistas().toArray());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstArtistas = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lblAlbumes = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de artistas");
        getContentPane().setLayout(null);

        lstArtistas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstArtistas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstArtistasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstArtistas);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 140, 274);

        jLabel1.setText("Nombre");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 10, 50, 16);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(150, 30, 240, 22);

        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(310, 80, 75, 22);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo);
        btnNuevo.setBounds(150, 80, 72, 22);

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(230, 80, 75, 22);

        lblAlbumes.setBackground(new java.awt.Color(153, 153, 153));
        lblAlbumes.setOpaque(true);
        getContentPane().add(lblAlbumes);
        lblAlbumes.setBounds(150, 130, 240, 130);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(!this.lstArtistas.isSelectionEmpty()){
            Artista a = (Artista) this.lstArtistas.getSelectedValue();
            this.s.eliminarArtista(a);
        }
        
        limpiar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiar();
        
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(this.lstArtistas.isSelectionEmpty()){
            this.s.crearArtista(this.txtNombre.getText());
        }else{
            Artista a = (Artista) this.lstArtistas.getSelectedValue();
            this.s.modificarArtista(a, this.txtNombre.getText());
        }
        
        limpiar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void lstArtistasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstArtistasValueChanged
        if(! this.lstArtistas.isSelectionEmpty()){//Esto me devuelve si no hay nada seleccionado en el listado
            Artista a = (Artista) this.lstArtistas.getSelectedValue();
            this.txtNombre.setText(a.getNombre());//obtengo el nombre del artista y lo pongo en la caja de texto
            
            String albumes = "<html>ALBUMES:<ul>";
            
            for (Album al : a.getAlbumes()){
                albumes += "<li>" + al.getNombre() + "</li>";
            }
            albumes += "</ul></html>";
            
            this.lblAlbumes.setText(albumes);
        }
    }//GEN-LAST:event_lstArtistasValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlbumes;
    private javax.swing.JList lstArtistas;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables


    private void limpiar(){
        this.txtNombre.setText("");
        System.out.println("Refrescando...");
        Spotify.getPersistencia().refrescar(this.s);
        System.out.println("Refrecado");
        
        this.lstArtistas.setListData(this.s.getArtistas().toArray());
        this.lstArtistas.clearSelection();
    
    
    }
    
    
    
    
    
    
}
